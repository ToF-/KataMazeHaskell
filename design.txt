
1. read the maze specification from standard input
    # is a wall
    . is a free space
    A is starting point (on a border)
    B is ending point   (on a border)
2. transpose the maze into a graph
3. solve the maze: shortest path from A to B, using Djikstra Algorithm
3.1 initialize a partially ordered tree (POT) with each node: key = node, prio = distance = Infinity
    set the priority of node source to 0
    update map of distances with source, distance_from_source = 0, via = source itself 
    start with r = source
3.2 r is fixed,
    update in POT all adjacent nodes of r, prio = distance from r
    extract the node s with minimal distance_from_source
    if distance_from_source r + weight r s < distance_from_source s 
    then distance_from_source s = distance_from_source r + weight r s, via = r

    
    update map of distances with s, distance of source =  
    
4. outputs the maze solved 
    o is a step in the path
5. outputs the directions from A to B:
    e.g. EEESSWSSEEEEENNEE


